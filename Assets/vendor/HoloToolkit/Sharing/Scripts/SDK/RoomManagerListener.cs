//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace HoloToolkit.Sharing {

public class RoomManagerListener : Listener {
  private System.Runtime.InteropServices.HandleRef swigCPtr;

  internal RoomManagerListener(System.IntPtr cPtr, bool cMemoryOwn) : base(SharingClientPINVOKE.RoomManagerListener_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static System.Runtime.InteropServices.HandleRef getCPtr(RoomManagerListener obj) {
    return (obj == null) ? new System.Runtime.InteropServices.HandleRef(null, System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~RoomManagerListener() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SharingClientPINVOKE.delete_RoomManagerListener(swigCPtr);
        }
        swigCPtr = new System.Runtime.InteropServices.HandleRef(null, System.IntPtr.Zero);
      }
      System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual void OnRoomAdded(Room newRoom) {
    if (SwigDerivedClassHasMethod("OnRoomAdded", swigMethodTypes0)) SharingClientPINVOKE.RoomManagerListener_OnRoomAddedSwigExplicitRoomManagerListener(swigCPtr, Room.getCPtr(newRoom)); else SharingClientPINVOKE.RoomManagerListener_OnRoomAdded(swigCPtr, Room.getCPtr(newRoom));
  }

  public virtual void OnRoomClosed(Room room) {
    if (SwigDerivedClassHasMethod("OnRoomClosed", swigMethodTypes1)) SharingClientPINVOKE.RoomManagerListener_OnRoomClosedSwigExplicitRoomManagerListener(swigCPtr, Room.getCPtr(room)); else SharingClientPINVOKE.RoomManagerListener_OnRoomClosed(swigCPtr, Room.getCPtr(room));
  }

  public virtual void OnUserJoinedRoom(Room room, int user) {
    if (SwigDerivedClassHasMethod("OnUserJoinedRoom", swigMethodTypes2)) SharingClientPINVOKE.RoomManagerListener_OnUserJoinedRoomSwigExplicitRoomManagerListener(swigCPtr, Room.getCPtr(room), user); else SharingClientPINVOKE.RoomManagerListener_OnUserJoinedRoom(swigCPtr, Room.getCPtr(room), user);
  }

  public virtual void OnUserLeftRoom(Room room, int user) {
    if (SwigDerivedClassHasMethod("OnUserLeftRoom", swigMethodTypes3)) SharingClientPINVOKE.RoomManagerListener_OnUserLeftRoomSwigExplicitRoomManagerListener(swigCPtr, Room.getCPtr(room), user); else SharingClientPINVOKE.RoomManagerListener_OnUserLeftRoom(swigCPtr, Room.getCPtr(room), user);
  }

  public virtual void OnAnchorsChanged(Room room) {
    if (SwigDerivedClassHasMethod("OnAnchorsChanged", swigMethodTypes4)) SharingClientPINVOKE.RoomManagerListener_OnAnchorsChangedSwigExplicitRoomManagerListener(swigCPtr, Room.getCPtr(room)); else SharingClientPINVOKE.RoomManagerListener_OnAnchorsChanged(swigCPtr, Room.getCPtr(room));
  }

  public virtual void OnAnchorsDownloaded(bool successful, AnchorDownloadRequest request, XString failureReason) {
    if (SwigDerivedClassHasMethod("OnAnchorsDownloaded", swigMethodTypes5)) SharingClientPINVOKE.RoomManagerListener_OnAnchorsDownloadedSwigExplicitRoomManagerListener(swigCPtr, successful, AnchorDownloadRequest.getCPtr(request), XString.getCPtr(failureReason)); else SharingClientPINVOKE.RoomManagerListener_OnAnchorsDownloaded(swigCPtr, successful, AnchorDownloadRequest.getCPtr(request), XString.getCPtr(failureReason));
  }

  public virtual void OnAnchorUploadComplete(bool successful, XString failureReason) {
    if (SwigDerivedClassHasMethod("OnAnchorUploadComplete", swigMethodTypes6)) SharingClientPINVOKE.RoomManagerListener_OnAnchorUploadCompleteSwigExplicitRoomManagerListener(swigCPtr, successful, XString.getCPtr(failureReason)); else SharingClientPINVOKE.RoomManagerListener_OnAnchorUploadComplete(swigCPtr, successful, XString.getCPtr(failureReason));
  }

  public RoomManagerListener() : this(SharingClientPINVOKE.new_RoomManagerListener(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnRoomAdded", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateRoomManagerListener_0(SwigDirectorOnRoomAdded);
    if (SwigDerivedClassHasMethod("OnRoomClosed", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateRoomManagerListener_1(SwigDirectorOnRoomClosed);
    if (SwigDerivedClassHasMethod("OnUserJoinedRoom", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateRoomManagerListener_2(SwigDirectorOnUserJoinedRoom);
    if (SwigDerivedClassHasMethod("OnUserLeftRoom", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateRoomManagerListener_3(SwigDirectorOnUserLeftRoom);
    if (SwigDerivedClassHasMethod("OnAnchorsChanged", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateRoomManagerListener_4(SwigDirectorOnAnchorsChanged);
    if (SwigDerivedClassHasMethod("OnAnchorsDownloaded", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateRoomManagerListener_5(SwigDirectorOnAnchorsDownloaded);
    if (SwigDerivedClassHasMethod("OnAnchorUploadComplete", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateRoomManagerListener_6(SwigDirectorOnAnchorUploadComplete);
    SharingClientPINVOKE.RoomManagerListener_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6);
  }

  private bool SwigDerivedClassHasMethod(string methodName, System.Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(RoomManagerListener));
    return hasDerivedMethod;
  }

  private void SwigDirectorOnRoomAdded(System.IntPtr newRoom) {
    OnRoomAdded((newRoom == System.IntPtr.Zero) ? null : new Room(newRoom, true));
  }

  private void SwigDirectorOnRoomClosed(System.IntPtr room) {
    OnRoomClosed((room == System.IntPtr.Zero) ? null : new Room(room, true));
  }

  private void SwigDirectorOnUserJoinedRoom(System.IntPtr room, int user) {
    OnUserJoinedRoom((room == System.IntPtr.Zero) ? null : new Room(room, true), user);
  }

  private void SwigDirectorOnUserLeftRoom(System.IntPtr room, int user) {
    OnUserLeftRoom((room == System.IntPtr.Zero) ? null : new Room(room, true), user);
  }

  private void SwigDirectorOnAnchorsChanged(System.IntPtr room) {
    OnAnchorsChanged((room == System.IntPtr.Zero) ? null : new Room(room, true));
  }

  private void SwigDirectorOnAnchorsDownloaded(bool successful, System.IntPtr request, System.IntPtr failureReason) {
    OnAnchorsDownloaded(successful, (request == System.IntPtr.Zero) ? null : new AnchorDownloadRequest(request, true), (failureReason == System.IntPtr.Zero) ? null : new XString(failureReason, true));
  }

  private void SwigDirectorOnAnchorUploadComplete(bool successful, System.IntPtr failureReason) {
    OnAnchorUploadComplete(successful, (failureReason == System.IntPtr.Zero) ? null : new XString(failureReason, true));
  }

  public delegate void SwigDelegateRoomManagerListener_0(System.IntPtr newRoom);
  public delegate void SwigDelegateRoomManagerListener_1(System.IntPtr room);
  public delegate void SwigDelegateRoomManagerListener_2(System.IntPtr room, int user);
  public delegate void SwigDelegateRoomManagerListener_3(System.IntPtr room, int user);
  public delegate void SwigDelegateRoomManagerListener_4(System.IntPtr room);
  public delegate void SwigDelegateRoomManagerListener_5(bool successful, System.IntPtr request, System.IntPtr failureReason);
  public delegate void SwigDelegateRoomManagerListener_6(bool successful, System.IntPtr failureReason);

  private SwigDelegateRoomManagerListener_0 swigDelegate0;
  private SwigDelegateRoomManagerListener_1 swigDelegate1;
  private SwigDelegateRoomManagerListener_2 swigDelegate2;
  private SwigDelegateRoomManagerListener_3 swigDelegate3;
  private SwigDelegateRoomManagerListener_4 swigDelegate4;
  private SwigDelegateRoomManagerListener_5 swigDelegate5;
  private SwigDelegateRoomManagerListener_6 swigDelegate6;

  private static System.Type[] swigMethodTypes0 = new System.Type[] { typeof(Room) };
  private static System.Type[] swigMethodTypes1 = new System.Type[] { typeof(Room) };
  private static System.Type[] swigMethodTypes2 = new System.Type[] { typeof(Room), typeof(int) };
  private static System.Type[] swigMethodTypes3 = new System.Type[] { typeof(Room), typeof(int) };
  private static System.Type[] swigMethodTypes4 = new System.Type[] { typeof(Room) };
  private static System.Type[] swigMethodTypes5 = new System.Type[] { typeof(bool), typeof(AnchorDownloadRequest), typeof(XString) };
  private static System.Type[] swigMethodTypes6 = new System.Type[] { typeof(bool), typeof(XString) };
}

}
